import comidas.*
import cocina.*

describe "cocina test" {
	
	const provo1 = new Provoleta(peso = 80, tieneEspecias=true, esCompleta = true)
	const provo2 = new Provoleta(peso = 260, tieneEspecias=true, esCompleta = false)	
	const provo3 = new Provoleta(peso = 260, tieneEspecias=false, esCompleta = false)
	const vege1 = new HamburguesaVegetariana(pan=panIndustrial, legumbre ="lentajas")
	const vege2 = new HamburguesaVegetariana(pan=panCasero, legumbre ="garbanzos")
	const carne1 = new HamburguesaDeCarne(pan=panDeMasaMadre)
	const parri1 = new Parrillada()
	const parri2 = new Parrillada()
	const corte1 = new Corte(peso=250, calidad=10 )
	const corte2 = new Corte(peso = 150, calidad= 7)
	const corte3 = new Corte(peso = 50, calidad = 8)

	fixture {
			parri1.agregarCorte(corte1)
			parri1.agregarCorte(corte2)
			parri1.agregarCorte(corte3)
			parri2.agregarCorte(corte3)

	}

	test "tiene buena oferta vegetariana" {
		cocina.agregarComida(provo2)
		cocina.agregarComida(provo3)
		cocina.agregarComida(vege1)
		cocina.agregarComida(vege2)
		cocina.agregarComida(parri1)
		assert.that(cocina.tieneBuenaOfertaVegetariana())
	}
	
	test "no tiene buena oferta vegetariana" {
		cocina.agregarComida(provo1)
		cocina.agregarComida(parri1)
		cocina.agregarComida(vege1)
		cocina.agregarComida(vege2)
		cocina.agregarComida(carne1)
		assert.that(not cocina.tieneBuenaOfertaVegetariana())
	}
	
	test "plato fuerte carnivoro 1" {
		cocina.agregarComida(provo1)
		cocina.agregarComida(parri1)
		cocina.agregarComida(parri2)
		cocina.agregarComida(vege1)
		cocina.agregarComida(vege2)
		cocina.agregarComida(carne1)
		assert.equals(parri1, cocina.platoFuerteCarnivoro())
	}
	
	test "plato fuerte carnivoro 2" {

		cocina.agregarComida(vege1)
		cocina.agregarComida(vege2)
		cocina.agregarComida(carne1) // 60 + 45
		cocina.agregarComida(provo1) // no especial 120 proque es especial
		assert.equals(carne1.valoracion(),  105)
		assert.equals(provo1.valoracion(),  120)
		assert.equals(provo1, cocina.platoFuerteCarnivoro())
	}
}
